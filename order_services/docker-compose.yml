version: '3.9'

services:
    postgres:
      image: postgres
      container_name: posgresql
      restart: on-failure
      environment: 
        - POSTGRES_DB=${ORDER_DB_NAME}
        - POSTGRES_USER=${ORDER_DB_USER}
        - POSTGRES_PASSWORD=${ORDER_DB_PASSWORD}
      networks: 
        - main
      ports: 
        - "5432:5432"
      volumes:
        - ./data/postgres:/var/lib/postgresql/data 

         
    pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      restart: on-failure
      environment:
        - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
        - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      ports:
        - "5050:80"
      volumes:
        - ./data/pgadmin:/var/lib/pgadmin/data
      networks:
        - main


    order_services:
      container_name: order_services
      build:
        context: ./order_services/
        dockerfile: Dockerfile
      command: sh -c "
                  python manage.py makemigrations &&
                  python manage.py migrate && 
                  python manage.py collectstatic --no-input && 
                  gunicorn -k gevent --chdir config config.wsgi:application -b 0.0.0.0:8003"
      restart: on-failure
      depends_on: 
        - postgres
      expose:
      - "8003"
      networks:
        - main
      volumes: 
        - .:/order_services/
        - ./static:/order_service/static


    nginx:
      container_name: nginx
      command: nginx -g 'daemon off;'
      image: nginx
      restart: on-failure
      networks: 
        - main
      ports: 
        - "80:80"
      volumes: 
        - ./nginx.conf:/etc/nginx/nginx.conf
        - ./static:/order_service/static


networks: 
  main:
    external: true

volumes: 
  static_order:
    external: true

  data:
    external: true
